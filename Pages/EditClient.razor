@page "/EditClient/{Username}/{Address}/{Postal_code}/{Email}/{Phone_number}/{id}"

<!DOCTYPE HTML>
<html>
<head>
<h1>Edit Client Data:</h1>

<h6><b>DO NOT USE THE FOLLOWING CHARACTERS: / \ </b></h6>
</head>
<div class="card">
<div class="container">
<EditForm Model="@ClientFormModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <h4>Client Name:</h4>
    <InputText type="text" id="Item" @bind-Value="ClientFormModel.Username" />
    <br>
    <h4>Email:</h4>
    <InputText type="text" id="Barcode" @bind-Value="ClientFormModel.Email" />
    <br>
    <h4>Phone Number:</h4>
    <InputText type="text" id="Phone_Number" @bind-Value="ClientFormModel.Phone_Number" />
    <br>
    <h4>Address: </h4>
    <InputText  type="text" id="Address" @bind-Value="ClientFormModel.Address"  />
    <br>
    <h4>Postal Code</h4>
    <InputText  type="text" id="Postal_code" @bind-Value="ClientFormModel.Postal_code"/>
    <br>
    <br>
    <button type="submit" class="btn btn-primary">Submit</button> 
    <ValidationSummary />
</EditForm>
</div>
</div>

</html>
@code{
    @using System.Net.Http
    @using System.Text 
    @using System.Net.Http.Json
    @using System.Web
    @using Newtonsoft.Json.Linq
    @using Newtonsoft.Json
    @inject NavigationManager NavManager
    @inject NavigationManager UriHelper
    @inject IJSRuntime JsRuntime;
    @inject HttpClient Http;
    public ClientFormModel ClientFormModel = new();
    [Parameter]
    public string Username { get; set; }
    [Parameter]
    public string Address{ get; set;} 

    [Parameter]
    public string Postal_code{get; set;}

    [Parameter]
    public string Email{get; set;}

    [Parameter]
    public string Phone_number{get; set;}

    [Parameter]
    public string Id{get; set;}
    public Validate Validate;
    public async void HandleValidSubmit(){
        Validate = await Http.GetFromJsonAsync<Validate>("https://ticktechapi.pythonanywhere.com/Clients/update_Client/"+ClientFormModel.Username+"/"+ClientFormModel.Address+"/"+ClientFormModel.Postal_code+"/"+ClientFormModel.Email+"/"+ClientFormModel.Phone_Number+"/"+Id.ToString());
        if (Validate.Status){         
            NavManager.NavigateTo("/Clients",true); 
        } 
        else {
            await JsRuntime.InvokeVoidAsync("alert", "This username is taken!");
        }
    }
    protected override async Task OnInitializedAsync(){
        dynamic validate;
        validate =  await JsRuntime.InvokeAsync<string>("BlazorGetLocalStorage","Username:");
        string value = (string)validate;
        ClientFormModel.Username = Username;
        ClientFormModel.Address = Address;
        ClientFormModel.Postal_code = Postal_code;
        ClientFormModel.Email = Email;
        ClientFormModel.Phone_Number = Phone_number;

        if(value==null){
            NavManager.NavigateTo("/",true); 
        }        
    }

}