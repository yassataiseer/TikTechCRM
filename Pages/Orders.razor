@page "/orders"
@inject HttpClient Http

<!DOCTYPE html>
<html>

<h1>Orders:</h1>
<button  class="btn btn-info"  @onclick="() => NewOrder()" ><Tooltip Text="New Order"><i class="oi oi-plus"></i> </Tooltip> Order</button> 


<body>
    <table class="table">
        <thead>
            <tr>
                <th>Client Name:</th>
                <th>Employee</th>
                <th>Product</th>
                <th>Brand</th>
                <th>Accessory</th>
                <th>Price</th>
                <th>Status</th>
                <th>Service</th>
                <th>Comments</th>
                <th>Add Date</th>
                <th>Up Date</th>
            </tr>
        </thead>
        <tbody>
            
            @foreach (var CurrentOrder in OrderData)
            {
                String Color="#ff9e9e";
                if(!@CurrentOrder.Deleted){
                    if(@CurrentOrder.Status=="Complete"||@CurrentOrder.Status=="Completed"){
                        Color="#adffc3";
                    }
                    if(@CurrentOrder.Status=="In-Progress"){
                        Color="#f1ff59";
                    }
                    <tr>
                    <td bgcolor=@Color>@CurrentOrder.Client</td>
                    <td bgcolor=@Color>@CurrentOrder.Employee</td>
                    <td bgcolor=@Color>@CurrentOrder.Product</td>
                    <td bgcolor=@Color>@CurrentOrder.Brand</td>
                    <td bgcolor=@Color>@CurrentOrder.Accessory</td>
                    <td bgcolor=@Color>@CurrentOrder.Price</td>
                    <td bgcolor=@Color>@CurrentOrder.Status</td>
                    <td bgcolor=@Color>@CurrentOrder.Service</td>
                    <td bgcolor=@Color>@CurrentOrder.Comments</td>
                    <td bgcolor=@Color>@CurrentOrder.Add_date</td>
                    <td bgcolor=@Color>@CurrentOrder.Up_data</td>

                        <button class="btn btn-primary" ><Tooltip Text="Edit Row"> <i class="oi oi-pencil"></i></Tooltip></button>
                        <button type="button" class="btn btn-danger"> <Tooltip Text="Delete"><i class="oi oi-trash"></i></Tooltip></button> 
                    </tr>
                }
            }
            
        </tbody>
    </table>

</body>

</html>


    @using System.Net.Http
    @using System.Text 
    @using System.Net.Http.Json
    @using System.Web
    @using Newtonsoft.Json.Linq
    @using Newtonsoft.Json
    @inject NavigationManager NavManager
    @inject NavigationManager UriHelper
    @inject IJSRuntime JsRuntime;
    
@code{
    private dynamic validate;
    private List<OrderModel> OrderData = new();


    protected override async Task OnInitializedAsync(){
        validate =  await JsRuntime.InvokeAsync<string>("BlazorGetLocalStorage","Username:");
       string value = (string)validate;
       if(value==null){
            NavManager.NavigateTo("/",true); 
       }
        using var client = new HttpClient();
        var result = await client.GetStringAsync("http://0.0.0.0:800/Orders/all_Order");

        JArray data = JArray.Parse(result);
        foreach (dynamic obj in data){
                OrderData.Add(new OrderModel(){
                    Accessory = obj.Accessory,
                    Add_date  = obj.Add_date,
                    Brand = obj.Brand,
                    Client = obj.Client,
                    Comments = obj.Comments,
                    Deleted = obj.Deleted,
                    Employee = obj.Employee,
                    Order_no = obj.Order_no,
                    Price = obj.Price,
                    Product = obj.Product,
                    Service = obj.Service,
                    Status = obj.Status,
                    Up_data = obj.Up_data,
            });
        }
        StateHasChanged();
    }
    public void NewOrder(){
        NavManager.NavigateTo("/neworder",true); 
    }
}
