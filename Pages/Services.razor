@page "/services"

<html>
<h1>Services</h1>
    <br>
    <button  class="btn btn-info" @onclick="() => NewService()" ><Tooltip Text="New Service"><i class="oi oi-plus"></i></Tooltip> Service</button> 
    <br>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Purpose</th>
                <th>Cost</th>
            </tr>
        </thead>
        <tbody>

                @foreach (var Services in ServiceData)
                {
                <tr>
                    <td>@Services.Service_name</td>
                    <td>@Services.Service_purpose</td>
                    <td>$@Services.Service_cost</td>
                    <button class="btn btn-primary" @onclick="() => EditRedirect(Services.Service_name,Services.Service_purpose,Services.Service_cost)" ><Tooltip Text="Edit Row"><i class="oi oi-pencil"></i></Tooltip></button>
                    <button type="button" class="btn btn-danger" @onclick="() => DeleteService(Services.Service_name)"><Tooltip Text="Delete"><i class="oi oi-trash"></i></Tooltip></button>
                     
                </tr>
                }
        </tbody>
    </table>


</html>

@code {
    @using System.Net.Http
    @using System.Text 
    @using System.Net.Http.Json
    @using System.Web
    @using Newtonsoft.Json.Linq
    @using Newtonsoft.Json
    @inject NavigationManager NavManager
    @inject NavigationManager UriHelper
    @inject IJSRuntime JsRuntime;
    private List<ServiceModel> ServiceData = new();
    private dynamic validate;

    protected override async Task OnInitializedAsync(){
        validate =  await JsRuntime.InvokeAsync<string>("BlazorGetLocalStorage","Username:");
       string value = (string)validate;
       if(value==null){
            NavManager.NavigateTo("/",true); 
       }
            using var client = new HttpClient();
            var result = await client.GetStringAsync("http://0.0.0.0:800/Services/all_Services");

            JArray data = JArray.Parse(result);
            foreach (dynamic obj in data){
                    ServiceData.Add(new ServiceModel(){
                        Service_cost = obj.Service_cost,
                        Service_name  = obj.Service_name,
                        Service_purpose = obj.Service_purpose
                });
            }

        StateHasChanged();

    }
    public void NewService(){
        NavManager.NavigateTo("/Newservice",true); 
    }
    private async void DeleteService(string Service_name){
        using var client = new HttpClient();
        var result = await client.GetStringAsync("http://0.0.0.0:800/Services/del_Services/"+Service_name);
        NavManager.NavigateTo("/Services",true); 
    }
    private void EditRedirect(string Service_name, string Service_purpose, double Service_cost){
         NavManager.NavigateTo("/editservice/"+Service_name+"/"+Service_purpose+"/"+Service_cost.ToString(),true); 
    }
}