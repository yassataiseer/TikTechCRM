@page "/Users"
@inject IModalService Modal

<html>
<h1>Users</h1>
<br>
<button  class="btn btn-info" @onclick="() => NewUser()"><Tooltip Text="Add A User"><i class="oi oi-plus"></i> </Tooltip> User</button> 

@if(isAdmin){
    @if (UserData == null)
    {
 <div id="app" style="margin: 0 auto; width: 100vw; height: 100vh">
        <div class="text-center pt-3" style="color: rgb(5, 39, 103); font-size: 16pt">
          Loading...
        </div>
        <div class="text-center mt-3">
          <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"
                style="font-size: 16pt; width: 36px; height: 36px; color: rgb(5, 39, 103)" />
        </div>
        <div class="text-center">
</div>
</div>
    }else{
        <h6>*Note: Admin Value remains as is!</h6>
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Password</th>
                </tr>
            </thead>

            <tbody>


                @foreach (var users in UserData)
                {
                    if(users.Username!="Admin"){
                    <tr>
                        <td>@users.Username</td>
                        <td>@users.Password </td>

                        <button class="btn btn-primary" @onclick="() => EditRedirect(users.Username,users.Password)" > <Tooltip Text="Edit Row"><i class="oi oi-pencil"></i> </Tooltip></button>
                        <button type="button" class="btn btn-danger" @onclick="() => DeleteUser(users.Username,users.Password)"  ><Tooltip Text="Delete Row"><i class="oi oi-trash"></i> </Tooltip></button>
                    </tr>
                    <br>
                    }
                }
            </tbody>
        </table>
                }
}
else{
    <h3>You are not Admin you don't have access to this page</h3>
}


</html>
    @using System.Net.Http
    @using System.Text 
    @using System.Net.Http.Json
    @using System.Web
    @using Newtonsoft.Json.Linq
    @using Newtonsoft.Json
    @inject NavigationManager NavManager
    @inject NavigationManager UriHelper
    @inject IJSRuntime JsRuntime;
    
@code{



    private List<UsersModel> UserData = new();
    private dynamic validate;
    public bool isAdmin;

    protected override async Task OnInitializedAsync(){
        validate =  await JsRuntime.InvokeAsync<string>("BlazorGetLocalStorage","Username:");
       string value = (string)validate;
       if(value==null){
            NavManager.NavigateTo("/",true); 
       }
        if(value=="Admin"){
            using var client = new HttpClient();
            var result = await client.GetStringAsync("https://ticktechapi.pythonanywhere.com/Users/grab_users");

            JArray data = JArray.Parse(result);
            foreach (dynamic obj in data){
                    UserData.Add(new UsersModel(){
                        Password = obj.Password,
                        Username  = obj.Username
                });
            }
            isAdmin=true;
        }else{
            isAdmin=false;
        }
        StateHasChanged();

    }
    private void EditRedirect(string Username,string Password)
    {
        NavManager.NavigateTo("/EditUser/"+Username+"/"+Password,true); 
    }


    private async void DeleteUser(string Username,string Password){
        using var client = new HttpClient();
        var result = await client.GetStringAsync("https://ticktechapi.pythonanywhere.com/Users/delete_user/"+Username+"/"+Password);
        NavManager.NavigateTo("/Users",true); 
    }
    private void NewUser()
    {
        NavManager.NavigateTo("/Newuser",true); 
    }
}
