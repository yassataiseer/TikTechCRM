@page "/Newuser"

<!DOCTYPE html>
<html>

<head>
    <h1>New User:</h1>
<h6><b>DO NOT USE THE FOLLOWING CHARACTERS: / \ </b></h6>
</head>
<div class="card">
<div class="container">
<EditForm Model="@LoginModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <h4>Username:</h4>
    <InputText type="text" id="UserName" @bind-Value="LoginModel.UserName" />
    <br>
    <h4>Password:</h4>
    <InputText type="password" id="Password" @bind-Value="LoginModel.Password" />
    <br>
    <br>
    <button type="submit" class="btn btn-primary">Submit</button> 
    <ValidationSummary />
</EditForm>
</div>
</div>
</html>


@code{
    @using System.Net.Http
    @using System.Text 
    @using System.Net.Http.Json
    @using System.Web
    @using Newtonsoft.Json.Linq
    @using Newtonsoft.Json
    @inject NavigationManager NavManager
    @inject NavigationManager UriHelper
    @inject IJSRuntime JsRuntime;
    private dynamic validate;
    private LoginModel LoginModel = new();

    private async void  HandleValidSubmit()
    {
        using var client = new HttpClient();
        var result = await client.GetStringAsync("http://0.0.0.0:800/Users/mk_user/"+LoginModel.UserName+"/"+LoginModel.Password);
        dynamic data = JObject.Parse(result);
        Console.WriteLine(data.Status);
        if (data.Status=="true"){
            NavManager.NavigateTo("/Users",true); 
        } 
        else {
            await JsRuntime.InvokeVoidAsync("alert", "Username is already taken");
        }
        //Console.WriteLine(LoginModel.Password);
        //Console.WriteLine("hello");
        // Process the valid form
    }

    protected override async Task OnInitializedAsync(){
        validate =  await JsRuntime.InvokeAsync<string>("BlazorGetLocalStorage","Username:");
       string value = (string)validate;
       
       if(value==null){
            NavManager.NavigateTo("/",true); 
       }        
    }
}

