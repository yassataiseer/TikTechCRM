@page "/editinventory/{Item}/{Barcode}/{Price}/{Quantity}/{Status}"


<!DOCTYPE html>
<html>

<head>
    <h1>Edit @Item Data:</h1>
    <h6><b>DO NOT USE THE FOLLOWING CHARACTERS: / \ </b></h6>
</head>
<div class="card">
<div class="container">
<EditForm Model="@EditInventoryModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <h4>Item Name:</h4>
    <p>*Note name cannot be changed</p>
    <InputText type="text" id="Item" @bind-Value="@Item" readonly/>
    <br>
    <h4>Barcode:</h4>
    <InputText type="text" id="Barcode" placeholder="@Barcode" @bind-Value="EditInventoryModel.Barcode" />
    <h4>Price:</h4>
    <InputNumber type=float min="1" id="Price" placeholder="@Price" @bind-Value="EditInventoryModel.Price" />
    <h4>Quantity:</h4>
    <InputNumber type=number min="0" id="Quantity"  placeholder="@Quantity" @bind-Value="EditInventoryModel.Quantity" />
    <h4>Status: </h4>
    <InputSelect placeholder="@Status"  @bind-Value="EditInventoryModel.Status">
      <option value=""></option>
         <option value="Empty">Empty</option>
         <option value="Full">Full</option>
         <option value="Almost empty">Almost empty</option>
   </InputSelect>

    <br>
    <br>
    <button type="submit" class="btn btn-primary">Submit</button> 
    <ValidationSummary />
</EditForm>
</div>
</div>
</html>


@code{
    @using System.Net.Http
    @using System.Text 
    @using System.Net.Http.Json
    @using System.Web
    @using Newtonsoft.Json.Linq
    @using Newtonsoft.Json
    @inject NavigationManager NavManager
    @inject NavigationManager UriHelper
    @inject IJSRuntime JsRuntime;
    private dynamic validate;
    public EditInventoryModel EditInventoryModel = new();
    
    [Parameter]
    public string Barcode { get; set; }
    [Parameter]
    public string Item { get; set; }
    [Parameter]
    public string Price { get; set; }
    [Parameter]
    public string Quantity { get; set; }
    [Parameter]    
    public string Status { get; set; }

    
    private async void  HandleValidSubmit()
    {
        using var client = new HttpClient();
        var result = await client.GetStringAsync("https://ticktechapi.pythonanywhere.com/Inventory/update_Inventory/"+Item+"/"+EditInventoryModel.Barcode+"/"+EditInventoryModel.Price.ToString("0.00")+"/"+EditInventoryModel.Quantity+"/"+EditInventoryModel.Status);
        dynamic data = JObject.Parse(result);
        Console.WriteLine(data.Status);
        if (data.Status=="true"){
            NavManager.NavigateTo("/inventory",true); 
        } 
        else {
            await JsRuntime.InvokeVoidAsync("alert", "Error");
        }        
    }

    protected override async Task OnInitializedAsync(){
        validate =  await JsRuntime.InvokeAsync<string>("BlazorGetLocalStorage","Username:");
       string value = (string)validate;
       EditInventoryModel.Barcode = Barcode;
       EditInventoryModel.Price = Convert.ToDouble(Price);
       EditInventoryModel.Quantity = Convert.ToInt32(Quantity);
       EditInventoryModel.Status = Status;

       if(value==null){
            NavManager.NavigateTo("/",true); 
       }        
    }
}